{"version":3,"file":"static/js/168.45b7e878.chunk.js","mappings":"sPACA,GAAgB,mBAAqB,oCAAoC,cAAgB,+BAA+B,kBAAoB,oC,SC2C5I,EAtCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGAC4BC,EAAAA,EAAAA,IAAqBN,GADjD,OACQO,EADR,OAEEH,EAAWG,EAAYC,SAFzB,4CADc,uBAAC,WAAD,wBAKdC,CAAgBT,EACjB,GAAE,CAACA,IAECG,EAEyB,IAAnBA,EAAQO,QAEf,gBAAKC,UAAWC,EAAAA,kBAAhB,8DAOF,gBAAKD,UAAWC,EAAAA,mBAAhB,UACE,eAAID,UAAWC,EAAAA,cAAf,SACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,gBAAIH,UAAWC,EAAAA,cAAf,WACE,wBACE,oCAAYE,EAAOC,aAEpB,gBAAKC,wBAAyB,CAAEC,OAAQH,EAAOI,aAJXJ,EAAOK,GAD7B,SAZhB,uCAuBV,C,wMCvCKC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,mEACuCF,IAFzD,cAIY,QAHXG,EADD,SAKHC,EAAAA,OAAAA,QAAe,kDAEbC,EAAoB,GACxBF,EAASG,KAAKlB,QAAQmB,SAAQ,SAAAC,GAC5B,OAAOH,EAAkBI,KAAK,CAAEV,GAAIS,EAAMT,GAAIW,MAAOF,EAAME,OAC5D,IAVI,kBAWEL,GAXF,kEAcA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAoC/B,GAApC,uFACkBsB,EAAAA,EAAAA,IAAA,6CACiBtB,EADjB,oBACoCoB,IAFtD,cAIY,QAHXG,EADD,SAKHC,EAAAA,OAAAA,QAAe,kDALZ,kBAOED,EAASG,MAPX,kEAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAqCC,GAArC,uFACkBX,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBACgDa,IAFlE,cAIY,QAHXV,EADD,SAKHC,EAAAA,OAAAA,QAAe,kDALZ,kBAOED,EAASG,MAPX,kEAUA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAiClC,GAAjC,uFACkBsB,EAAAA,EAAAA,IAAA,6CACiBtB,EADjB,4BAC4CoB,IAF9D,cAIY,QAHXG,EADD,SAKHC,EAAAA,OAAAA,QAAe,kDALZ,kBAOED,EAASG,MAPX,kEAUA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAAoCN,GAApC,uFACkBsB,EAAAA,EAAAA,IAAA,6CACiBtB,EADjB,4BAC4CoB,IAF9D,cAIY,QAHXG,EADD,SAKHC,EAAAA,OAAAA,QAAe,kDALZ,kBAOED,EAASG,MAPX,kE","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","components/apiFetching/apiFetching.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviews__container\":\"Reviews_reviews__container__BQyOV\",\"reviews__list\":\"Reviews_reviews__list__FL7NX\",\"reviews__notFound\":\"Reviews_reviews__notFound__W6gkf\"};","import { fetchingMovieReviews } from 'components/apiFetching/apiFetching';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function getMovieReviews() {\n      const reviewsData = await fetchingMovieReviews(movieId);\n      setReviews(reviewsData.results);\n    }\n    getMovieReviews(movieId);\n  }, [movieId]);\n\n  if (!reviews) {\n    return <div>Loading...</div>;\n  } else if (reviews.length === 0) {\n    return (\n      <div className={css.reviews__notFound}>\n        Sorry, we don't have any reviews for this movie\n      </div>\n    );\n  }\n\n  return (\n    <div className={css.reviews__container}>\n      <ul className={css.reviews__list}>\n        {reviews.map(review => (\n          <li className={css.reviews__item} key={review.id}>\n            <p>\n              <b>Author: {review.author}</b>\n            </p>\n            {<div dangerouslySetInnerHTML={{ __html: review.content }}></div>}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import { Notify } from 'notiflix';\nimport axios from 'axios';\n\nconst apiKey = `6f4e972748a8ce0b96b8a311e5f34016`;\n\nexport async function fetchingPopularMovies() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${apiKey}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  let popularMoviesList = [];\n  response.data.results.forEach(movie => {\n    return popularMoviesList.push({ id: movie.id, title: movie.title });\n  });\n  return popularMoviesList;\n}\n\nexport async function fetchingMovieDetails(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  return response.data;\n}\n\nexport async function fetchingSearchedMovie(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  return response.data;\n}\n\nexport async function fetchingMovieCast(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  return response.data;\n}\n\nexport async function fetchingMovieReviews(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  return response.data;\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchingMovieReviews","reviewsData","results","getMovieReviews","length","className","css","map","review","author","dangerouslySetInnerHTML","__html","content","id","apiKey","fetchingPopularMovies","axios","response","Notify","popularMoviesList","data","forEach","movie","push","title","fetchingMovieDetails","fetchingSearchedMovie","query","fetchingMovieCast"],"sourceRoot":""}
{"version":3,"file":"static/js/363.f207b042.chunk.js","mappings":"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","sources":["components/apiFetching/apiFetching.jsx","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import { Notify } from 'notiflix';\nimport axios from 'axios';\n\nconst apiKey = `6f4e972748a8ce0b96b8a311e5f34016`;\n\nexport async function fetchingPopularMovies() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${apiKey}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  let popularMoviesList = [];\n  response.data.results.forEach(movie => {\n    return popularMoviesList.push({ id: movie.id, title: movie.title });\n  });\n  return popularMoviesList;\n}\n\nexport async function fetchingMovieDetails(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  return response.data;\n}\n\nexport async function fetchingSearchedMovie(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  return response.data;\n}\n\nexport async function fetchingMovieCast(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  return response.data;\n}\n\nexport async function fetchingMovieReviews(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  return response.data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails__container\":\"MovieDetails_movieDetails__container__Iaylr\",\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\",\"movieDetails__poster\":\"MovieDetails_movieDetails__poster__KnEKw\",\"movieDetails__title\":\"MovieDetails_movieDetails__title__2ympJ\",\"movieDetails__genres\":\"MovieDetails_movieDetails__genres__x6kEb\",\"additionalInfo\":\"MovieDetails_additionalInfo__qmwMY\",\"additionalInfo__list\":\"MovieDetails_additionalInfo__list__1QymM\",\"additionalInfo__item\":\"MovieDetails_additionalInfo__item__BKbKm\"};","import React, { useEffect, useState } from 'react';\nimport { fetchingMovieDetails } from 'components/apiFetching/apiFetching';\nimport { useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport ImageNotFound from '../../images/clapper-2140602_1920.jpg';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const backLink = '/';\n\n  useEffect(() => {\n    fetchingMovieDetails(movieId).then(movie => {\n      setMovie(movie);\n    });\n  }, [movieId]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    movie;\n\n  const year = release_date.substring(0, 4);\n  const score = Math.ceil(vote_average * 10);\n\n  return (\n    <div className={css.movieDetails__container}>\n      <div className={css.movieDetails}>\n        <div className={css.movieDetails__img}>\n          <img\n            className={css.movieDetails__poster}\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : ImageNotFound\n            }\n            alt={title}\n          />\n        </div>\n        <div className={css.movieDetails__info}>\n          <h1 className={css.movieDetails__title}>\n            {title} ({year})\n          </h1>\n          <p>\n            <b>User score:</b> {score}\n          </p>\n          <p>\n            <b>Overview:</b> {overview}\n          </p>\n          <ul className={css.movieDetails__genres}>\n            <b>Genres:</b>{' '}\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className={css.additionalInfo}>\n        <b>Additional information:</b>\n        <ul className={css.additionalInfo__list}>\n          <li>\n            <Link\n              className={css.additionalInfo__item}\n              to=\"cast\"\n              from={backLink}\n            >\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link\n              className={css.additionalInfo__item}\n              to=\"reviews\"\n              from={backLink}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React from 'react';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\n\nconst MovieDetailsPage = () => {\n  return <MovieDetails />;\n};\n\nexport default MovieDetailsPage;\n"],"names":["apiKey","fetchingPopularMovies","axios","response","Notify","popularMoviesList","data","results","forEach","movie","push","id","title","fetchingMovieDetails","movieId","fetchingSearchedMovie","query","fetchingMovieCast","fetchingMovieReviews","useParams","useState","setMovie","useEffect","then","poster_path","release_date","vote_average","overview","genres","year","substring","score","Math","ceil","className","css","src","ImageNotFound","alt","map","genre","name","to","from","Suspense","fallback"],"sourceRoot":""}
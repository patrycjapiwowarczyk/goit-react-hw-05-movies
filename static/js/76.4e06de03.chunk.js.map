{"version":3,"file":"static/js/76.4e06de03.chunk.js","mappings":"4PACA,EAAkC,8BAAlC,EAA6E,yBAA7E,EAAmH,yBAAnH,EAAwJ,wBAAxJ,EAA6L,yBAA7L,EAAuO,6B,SCmDvO,EA7Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACyBC,EAAAA,EAAAA,IAAkBN,GAD3C,OACQO,EADR,OAEEH,EAAQG,EAASJ,MAFnB,4CADc,uBAAC,WAAD,wBAKdK,CAAaR,EACd,GAAE,CAACA,IAECG,EAEsB,IAAhBA,EAAKM,QACP,gBAAKC,UAAWC,EAAhB,kEAIP,gBAAKD,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGR,EAAKS,KAAI,SAAAC,GAAK,OACb,gBAAIH,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXG,IACED,EAAME,aAAN,yCACsCF,EAAME,cACxCC,EAENC,IAAKJ,EAAMK,KACXC,MAAM,QACNC,OAAO,WAET,iBAAKV,UAAWC,EAAhB,WACE,wBAAI,uBAAIE,EAAMK,UACd,uCAAeL,EAAMQ,kBAdWR,EAAMS,GAD7B,SARZ,uCA8BV,C,wMC/CKC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,mEACuCF,IAFzD,cAIY,QAHXG,EADD,SAKHC,EAAAA,OAAAA,QAAe,kDAEbC,EAAoB,GACxBF,EAASG,KAAKC,QAAQC,SAAQ,SAAAC,GAC5B,OAAOJ,EAAkBK,KAAK,CAAEX,GAAIU,EAAMV,GAAIY,MAAOF,EAAME,OAC5D,IAVI,kBAWEN,GAXF,kEAcA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAoCnC,GAApC,uFACkByB,EAAAA,EAAAA,IAAA,6CACiBzB,EADjB,oBACoCuB,IAFtD,cAIY,QAHXG,EADD,SAKHC,EAAAA,OAAAA,QAAe,kDALZ,kBAOED,EAASG,MAPX,kEAUA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAqCC,GAArC,uFACkBZ,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBACgDc,IAFlE,cAIY,QAHXX,EADD,SAKHC,EAAAA,OAAAA,QAAe,kDALZ,kBAOED,EAASG,MAPX,kEAUA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCN,GAAjC,uFACkByB,EAAAA,EAAAA,IAAA,6CACiBzB,EADjB,4BAC4CuB,IAF9D,cAIY,QAHXG,EADD,SAKHC,EAAAA,OAAAA,QAAe,kDALZ,kBAOED,EAASG,MAPX,kEAUA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAAoCtC,GAApC,uFACkByB,EAAAA,EAAAA,IAAA,6CACiBzB,EADjB,4BAC4CuB,IAF9D,cAIY,QAHXG,EADD,SAKHC,EAAAA,OAAAA,QAAe,kDALZ,kBAOED,EAASG,MAPX,kE","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/apiFetching/apiFetching.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast__container\":\"Cast_cast__container__d3UyY\",\"cast__list\":\"Cast_cast__list__yNezN\",\"cast__item\":\"Cast_cast__item__UfPEI\",\"cast__img\":\"Cast_cast__img__IB6ux\",\"cast__info\":\"Cast_cast__info__XMSaD\",\"cast__notFound\":\"Cast_cast__notFound__VA52D\"};","import { fetchingMovieCast } from 'components/apiFetching/apiFetching';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport ImageNotFound from '../../images/clapper-2140602_1920.jpg';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    async function getMovieCast() {\n      const castData = await fetchingMovieCast(movieId);\n      setCast(castData.cast);\n    }\n    getMovieCast(movieId);\n  }, [movieId]);\n\n  if (!cast) {\n    return <div>Loading...</div>;\n  } else if (cast.length === 0) {\n    return <div className={css.cast__notFound}>Sorry, we don't have any information about the cast</div>;\n  }\n\n  return (\n    <div className={css.cast__container}>\n      <ul className={css.cast__list}>\n        {cast.map(actor => (\n          <li className={css.cast__item} key={actor.id}>\n            <img\n              className={css.cast__img}\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w185${actor.profile_path}`\n                  : ImageNotFound\n              }\n              alt={actor.name}\n              width=\"180px\"\n              height=\"270px\"\n            />\n            <div className={css.cast__info}>\n              <p>{<b>{actor.name}</b>}</p>\n              <p>Character: {actor.character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import { Notify } from 'notiflix';\nimport axios from 'axios';\n\nconst apiKey = `6f4e972748a8ce0b96b8a311e5f34016`;\n\nexport async function fetchingPopularMovies() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${apiKey}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  let popularMoviesList = [];\n  response.data.results.forEach(movie => {\n    return popularMoviesList.push({ id: movie.id, title: movie.title });\n  });\n  return popularMoviesList;\n}\n\nexport async function fetchingMovieDetails(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  return response.data;\n}\n\nexport async function fetchingSearchedMovie(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  return response.data;\n}\n\nexport async function fetchingMovieCast(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  return response.data;\n}\n\nexport async function fetchingMovieReviews(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n  );\n  if (response === null) {\n    Notify.failure('Fetching movies failed, please try again later');\n  }\n  return response.data;\n}\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetchingMovieCast","castData","getMovieCast","length","className","css","map","actor","src","profile_path","ImageNotFound","alt","name","width","height","character","id","apiKey","fetchingPopularMovies","axios","response","Notify","popularMoviesList","data","results","forEach","movie","push","title","fetchingMovieDetails","fetchingSearchedMovie","query","fetchingMovieReviews"],"sourceRoot":""}